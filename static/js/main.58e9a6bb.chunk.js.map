{"version":3,"sources":["assets/background.png","assets/logo.png","assets/rex.jpeg","assets/suri.png","assets/dorje.JPG","assets/anastasia.png","components/CocktailItem.js","components/Header.js","components/VodkaList.js","components/GinList.js","components/RumList.js","components/TequilaList.js","components/ScotchList.js","components/WhiskeyList.js","components/Popular.js","components/Random.js","saludLogin.js","components/favoriteslist.js","components/SearchBar.js","Home.js","components/DrinkId.js","components/idList.js","components/SearchList.js","components/About-Us.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CocktailItem","console","log","cocktail","this","props","className","name","src","image","alt","Component","Header","to","VodkaList","state","id","favorites","makeFavorite","drink","a","user","JSON","parse","localStorage","getItem","request","post","api_id","set","token","fave","body","renderButton","find","cocktails","onClick","getVodkaList","get","getFavorites","data","setState","map","key","history","push","GinList","getGinList","RumList","getRumList","TequilaList","getTequilaList","ScotchList","getScotchList","WhiskeyList","getWhiskeyList","PopularList","getPopularList","RandomList","getRandomList","require","config","SaludLogin","usernameSignIn","usernameSignUp","passwordSignIn","passwordSignUp","handleSignIn","email","password","signIn","setItem","stringify","handleSignUp","signUp","placeholder","value","onChange","e","target","withRouter","getFavoritesList","location","pathname","SearchBar","onSubmit","handleSearch","searchQuery","handleChange","Home","match","params","preventDefault","DrinkId","ingredientArray","measurementArray","elementArray","Ingredients","Measurement","ingredient","i","string","Name","Image","Instructions","IdList","getIdList","myDrink","length","SearchList","getSearchList","myCocktail","AboutUs","bCImage","rexImg","suriImg","dorjeImg","anastasiaImg","App","setUser","myImage","exact","path","component","idList","render","historyprops","favoritesList","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.58e9a6bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.83c1cba7.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.9f302433.png\";","module.exports = __webpack_public_path__ + \"static/media/rex.bf899686.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/suri.8af06777.png\";","module.exports = __webpack_public_path__ + \"static/media/dorje.d25168a1.JPG\";","module.exports = __webpack_public_path__ + \"static/media/anastasia.6a397955.png\";","import React, { Component } from 'react'\n\nexport default class CocktailItem extends Component {\n    render() {\n        console.log('hello world')\n        const { cocktail } = this.props;\n        return (\n            <div className='drink-name'>\n                <h2>\n                    {cocktail.name}\n                </h2>\n                <img src ={cocktail.image} alt=\"\"/>\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; \nimport '../Header.css';\n\n\n\nexport default class Header extends Component {\n    render() {\n        return (\n       \n\n            <div className='drinks'>\n        <Link className='vodka' to='/vodka'>Vodka</Link>\n\n<Link className='gin' to='/gin'> Gin</Link>\n<Link className='tequila' to='/tequila'> Tequila </Link>\n<Link className='scotch' to='/scotch'> Scotch</Link>\n<Link className='whiskey' to='/whiskey'> Whiskey </Link>\n<Link className='rum' to='/rum'>Rum</Link> \n<Link className='popular' to='/popular'>Popular Drinks</Link>\n<Link className='favorites' to='/favorites'> Favorites</Link>\n<Link className='about-us' to='/about-us'>About Us</Link>\n<Link className='home' to='/'> Home</Link>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport request from 'superagent';\n//import { Link } from 'react-router-dom';\nimport CocktailItem from './CocktailItem';\nimport Header from './Header.js';\n\n\n\n\nexport default class VodkaList extends Component {\n    state = {\n        id: [],\n        cocktail:[],\n        favorites:[]\n    }\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        const getVodkaList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/vodka`)\n            .set('Authorization', user.token);\n\n        const getFavorites = () => request.get('https://mighty-plateau-34350.herokuapp.com/favorites')\n            .set('Authorization', user.token); \n            \n    \n    const fave = await getFavorites()\n    const data = await getVodkaList()\n    console.log(data.body)\n    this.setState({\n        cocktail: data.body,\n        favorites: fave.body\n    })\n}\n\nmakeFavorite = async (drink) => {\n    console.log('this works', drink)\n    // when the user clicks the makeFavorite button, add this drink to the favorite list\n    const user = JSON.parse(localStorage.getItem('user'))\n    const fave = await request.post('https://mighty-plateau-34350.herokuapp.com/favorites', {\n        name: drink.name,\n        image: drink.image,\n        api_id: drink.id \n       \n    })\n    .set('Authorization', user.token)\n    console.log('fave', fave.body)\n}\nrenderButton = (drink) => {\n    // check the favorites list if we're on the search page\n    const isOnFavoritesList = this.state.favorites.find(cocktails => drink.name === cocktails.name);\n    if (!isOnFavoritesList) {\n    \n    return <button className='fav-btn' onClick={ () => this.makeFavorite(drink)}>Add to Favorites🍹</button>\n    }\n    // otherwise, indicate that they ae already on the favorites list\n    // this.makeFavorite(drink.id)\n    return <span>🍸</span>\n}\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <h2 className='vodka-h2'>Vodka Cocktails </h2>\n                <ul className='vodka-list'>\n                {\n                        this.state.cocktail.map(cocktail => (\n                            <>\n                            <div key={cocktail.id} to={`/id/${cocktail.id}`} onClick={()=> this.props.history.push(`/id/${cocktail.id}`)}> \n                    \n                            <CocktailItem cocktail={cocktail}/>\n                            </div>\n                            {this.renderButton(cocktail)}\n                    </>\n                        )\n                        )   \n                        }\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport request from 'superagent';\nimport CocktailItem from './CocktailItem';\nimport Header from './Header.js';\n\n\nexport default class GinList extends Component {\n    state = {\n        id: [],\n        cocktail:[],\n        favorites: []\n    }\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        const getGinList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/gin`)\n            .set('Authorization', user.token);\n\n            const getFavorites = () => request.get('https://mighty-plateau-34350.herokuapp.com/favorites')\n            .set('Authorization', user.token); \n\n        const fave = await getFavorites()    \n        const data = await getGinList()\n    console.log(data.body)\n    this.setState({\n        cocktail: data.body,\n        favorites: fave.body\n    })\n}\nmakeFavorite = async (drink) => {\n    console.log('this works', drink)\n    // when the user clicks the makeFavorite button, add this drink to the favorite list\n    const user = JSON.parse(localStorage.getItem('user'))\n    const fave = await request.post('https://mighty-plateau-34350.herokuapp.com/favorites', {\n        name: drink.name,\n        image: drink.image,\n        api_id: drink.id     \n    })\n    .set('Authorization', user.token)\n    console.log('fave', fave.body)\n}\nrenderButton = (drink) => {\n    // check the favorites list if we're on the search page\n    const isOnFavoritesList = this.state.favorites.find(cocktails => drink.name === cocktails.name);\n    if (!isOnFavoritesList) {\n    \n    return <button className='fav-btn' onClick={ () => this.makeFavorite(drink)}>Add to Favorites🍹</button>\n    }\n    // otherwise, indicate that they ae already on the favorites list\n    // this.makeFavorite(drink.id)\n    return <span>🍸</span>\n}\n\n\n    render() {\n        return (\n\n            <div>\n                <Header/>\n                <h2 className='gin-h2'>Gin Cocktails  </h2>\n                <ul className='gin-list'>\n\n                    {\n                        this.state.cocktail.map(cocktail => (\n                            <>\n                            <div key={cocktail.id} to={`/id/${cocktail.id}`} onClick={()=> this.props.history.push(`/id/${cocktail.id}`)}> \n                    \n                            <CocktailItem cocktail={cocktail}/>\n                            </div>\n                            {this.renderButton(cocktail)}\n                            </>\n                        )\n                        )   \n                        }\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport request from 'superagent';\n//import { Link } from 'react-router-dom';\nimport CocktailItem from './CocktailItem';\nimport Header from './Header.js'\n\n\n\nexport default class RumList extends Component {\n    state = {\n        id: [],\n        cocktail:[]\n    }\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        const getRumList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/rum`)\n            .set('Authorization', user.token);\n        \n        const getFavorites = () => request.get('https://mighty-plateau-34350.herokuapp.com/favorites')\n            .set('Authorization', user.token); \n\n        const fave = await getFavorites()    \n        const data = await getRumList()\n    console.log(data.body)\n    this.setState({\n        cocktail: data.body,\n        favorites: fave.body\n\n    })\n}\n\nmakeFavorite = async (drink) => {\n    console.log('this works', drink)\n    // when the user clicks the makeFavorite button, add this drink to the favorite list\n    const user = JSON.parse(localStorage.getItem('user'))\n    const fave = await request.post('https://mighty-plateau-34350.herokuapp.com/favorites', {\n        name: drink.name,\n        image: drink.image,\n        api_id: drink.id \n       \n    })\n    .set('Authorization', user.token)\n    console.log('fave', fave.body)\n}\nrenderButton = (drink) => {\n    // check the favorites list if we're on the search page\n    const isOnFavoritesList = this.state.favorites.find(cocktails => drink.name === cocktails.name);\n    if (!isOnFavoritesList) {\n    \n    return <button className='fav-btn' onClick={ () => this.makeFavorite(drink)}>Add to Favorites🍹</button>\n    }\n    // otherwise, indicate that they ae already on the favorites list\n    // this.makeFavorite(drink.id)\n    return <span>🍸</span>\n}\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <h2 className='rum-h2'>Rum Cocktails</h2>\n                <ul className='rum-list'>\n                {\n                        this.state.cocktail.map(cocktail => (\n                            <>\n                            <div key={cocktail.id} to={`/id/${cocktail.id}`} onClick={()=> this.props.history.push(`/id/${cocktail.id}`)}> \n                    \n                            <CocktailItem cocktail={cocktail}/>\n                            </div>\n                            {this.renderButton(cocktail)}\n                    </>\n                        )\n                        )   \n                        }\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport request from 'superagent';\n//import { Link } from 'react-router-dom';\nimport CocktailItem from './CocktailItem';\nimport Header from './Header.js';\n\n\n\nexport default class TequilaList extends Component {\n    state = {\n        id: [],\n        cocktail:[],\n        favorites:[]\n    }\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        const getTequilaList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/tequila`)\n            .set('Authorization', user.token);\n\n        const getFavorites = () => request.get('https://mighty-plateau-34350.herokuapp.com/favorites')\n            .set('Authorization', user.token); \n\n        \n    const fave = await getFavorites()        \n    const data = await getTequilaList()\n    console.log(data.body)\n    this.setState({\n        cocktail: data.body,\n        favorites: fave.body\n    })\n}\n\nmakeFavorite = async (drink) => {\n    console.log('this works', drink)\n    // when the user clicks the makeFavorite button, add this drink to the favorite list\n    const user = JSON.parse(localStorage.getItem('user'))\n    const fave = await request.post('https://mighty-plateau-34350.herokuapp.com/favorites', {\n        name: drink.name,\n        image: drink.image,\n        api_id: drink.id \n       \n    })\n    .set('Authorization', user.token)\n    console.log('fave', fave.body)\n}\nrenderButton = (drink) => {\n    // check the favorites list if we're on the search page\n    const isOnFavoritesList = this.state.favorites.find(cocktails => drink.name === cocktails.name);\n    if (!isOnFavoritesList) {\n    \n    return <button className='fav-btn' onClick={ () => this.makeFavorite(drink)}>Add to Favorites🍹</button>\n    }\n    // otherwise, indicate that they ae already on the favorites list\n    // this.makeFavorite(drink.id)\n    return <span>🍸</span>\n}\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <h2 className='tequila-h2'>Tequila Cocktails</h2>\n                <ul className='tequila-list'>\n                {\n                        this.state.cocktail.map(cocktail => (\n                            <>\n                            <div key={cocktail.id} to={`/id/${cocktail.id}`} onClick={()=> this.props.history.push(`/id/${cocktail.id}`)}> \n                    \n                            <CocktailItem cocktail={cocktail}/>\n                            </div>\n                            {this.renderButton(cocktail)}\n                    </>\n                        )\n                        )   \n                        }\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport request from 'superagent';\n//import { Link } from 'react-router-dom';\nimport CocktailItem from './CocktailItem';\nimport Header from './Header.js';\n\n\n\n\nexport default class ScotchList extends Component {\n    state = {\n        id: [],\n        cocktail:[]\n    }\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        const getScotchList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/scotch`)\n            .set('Authorization', user.token);\n\n            const getFavorites = () => request.get('https://mighty-plateau-34350.herokuapp.com/favorites')\n            .set('Authorization', user.token); \n\n        const fave = await getFavorites()       \n        const data = await getScotchList()\n    console.log(data.body)\n    this.setState({\n        cocktail: data.body,\n        favorites: fave.body\n    })\n}\n\nmakeFavorite = async (drink) => {\n    console.log('this works', drink)\n    // when the user clicks the makeFavorite button, add this drink to the favorite list\n    const user = JSON.parse(localStorage.getItem('user'))\n    const fave = await request.post('https://mighty-plateau-34350.herokuapp.com/favorites', {\n        name: drink.name,\n        image: drink.image,\n        api_id: drink.id \n       \n    })\n    .set('Authorization', user.token)\n    console.log('fave', fave.body)\n}\nrenderButton = (drink) => {\n    // check the favorites list if we're on the search page\n    const isOnFavoritesList = this.state.favorites.find(cocktails => drink.name === cocktails.name);\n    if (!isOnFavoritesList) {\n    \n    return <button className='fav-btn' onClick={ () => this.makeFavorite(drink)}>Add to Favorites🍹</button>\n    }\n    // otherwise, indicate that they ae already on the favorites list\n    // this.makeFavorite(drink.id)\n    return <span>🍸</span>\n}\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <h2 className='scotch-h2'>Scotch Cocktails</h2>\n                <ul className='scotch-list'>\n                {\n                        this.state.cocktail.map(cocktail => (\n                            <>\n                            <div key={cocktail.id} to={`/id/${cocktail.id}`} onClick={()=> this.props.history.push(`/id/${cocktail.id}`)}> \n                    \n                            <CocktailItem cocktail={cocktail}/>\n                            </div>\n                               {this.renderButton(cocktail)}\n                               </>\n                        )\n                        )   \n                        }\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport request from 'superagent';\n//import { Link } from 'react-router-dom';\nimport CocktailItem from './CocktailItem';\nimport header from './Header.js';\nimport Header from './Header.js';\n\n\n\nexport default class WhiskeyList extends Component {\n    state = {\n        id: [],\n        cocktail:[],\n        favorites: []\n    }\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        const getWhiskeyList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/whiskey`)\n            .set('Authorization', user.token);\n\n        const getFavorites = () => request.get('https://mighty-plateau-34350.herokuapp.com/favorites')\n            .set('Authorization', user.token); \n\n    const fave = await getFavorites()       \n    const data = await getWhiskeyList()\n    console.log(data.body)\n    this.setState({\n        cocktail: data.body,\n        favorites: fave.body\n    })\n}\n\nmakeFavorite = async (drink) => {\n    console.log('this works', drink)\n    // when the user clicks the makeFavorite button, add this drink to the favorite list\n    const user = JSON.parse(localStorage.getItem('user'))\n    const fave = await request.post('https://mighty-plateau-34350.herokuapp.com/favorites', {\n        name: drink.name,\n        image: drink.image,\n        api_id: drink.id \n       \n    })\n    .set('Authorization', user.token)\n    console.log('fave', fave.body)\n}\n\nrenderButton = (drink) => {\n    // check the favorites list if we're on the search page\n    const isOnFavoritesList = this.state.favorites.find(cocktails => drink.name === cocktails.name);\n    if (!isOnFavoritesList) {\n    \n    return <button className='fav-btn' onClick={ () => this.makeFavorite(drink)}> Add to Favorites🍹</button>\n    }\n    // otherwise, indicate that they ae already on the favorites list\n    // this.makeFavorite(drink.id)\n    return <span>🍸</span>\n}\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <h2 className='whiskey-h2'>Whiskey Cocktails</h2>\n                <ul className='whiskey-list'>\n                {\n                        this.state.cocktail.map(cocktail => (\n                            <>\n                            <div key={cocktail.id} to={`/id/${cocktail.id}`} onClick={()=> this.props.history.push(`/id/${cocktail.id}`)}> \n                    \n                            <CocktailItem cocktail={cocktail}/>\n                            </div>\n                            {this.renderButton(cocktail)}\n                    </>\n                        )\n                        )   \n                        }\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport request from 'superagent';\n//import { Link } from 'react-router-dom';\nimport CocktailItem from './CocktailItem';\nimport Header from './Header.js';\n\n\n\nexport default class PopularList extends Component {\n    state = {\n        id: [],\n        cocktail:[],\n        favorites:[]\n    }\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        \n        const getPopularList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/popular`)\n            .set('Authorization', user.token);\n\n        const getFavorites = () => request.get('https://mighty-plateau-34350.herokuapp.com/favorites')\n            .set('Authorization', user.token); \n\n        const fave = await getFavorites()     \n        const data = await getPopularList()\n    console.log(data.body)\n    this.setState({\n        cocktail: data.body,\n        favorites: fave.body\n    })\n}\n\nmakeFavorite = async (drink) => {\n    console.log('this works', drink)\n    // when the user clicks the makeFavorite button, add this drink to the favorite list\n    const user = JSON.parse(localStorage.getItem('user'))\n    const fave = await request.post('https://mighty-plateau-34350.herokuapp.com/favorites', {\n        name: drink.name,\n        image: drink.image,\n        api_id: drink.id \n       \n    })\n    .set('Authorization', user.token)\n    console.log('fave', fave.body)\n}\nrenderButton = (drink) => {\n    // check the favorites list if we're on the search page\n    const isOnFavoritesList = this.state.favorites.find(cocktails => drink.name === cocktails.name);\n    if (!isOnFavoritesList) {\n     \n    return <button className='fav-btn' onClick={ () => this.makeFavorite(drink)}>Add to Favorites🍹</button>\n    }\n    // otherwise, indicate that they ae already on the favorites list\n    // this.makeFavorite(drink.id)\n    return <span>🍸</span>\n}\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <h2 className='popular-h2'>Popular Cocktails</h2>\n                <ul className='popular-list'>\n                {\n                        this.state.cocktail.map(cocktail => (\n                            <>\n                            <div key={cocktail.id} to={`/id/${cocktail.id}`} onClick={()=> this.props.history.push(`/id/${cocktail.id}`)}> \n                    \n                            <CocktailItem cocktail={cocktail}/>\n                            </div>\n                            {this.renderButton(cocktail)}\n                    </>\n                        )\n                        )   \n                        }\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport request from 'superagent';\nimport { Link } from 'react-router-dom';\nimport CocktailItem from './CocktailItem';\n\n//const user = JSON.parse(localStorage.getItem('user'))\n\n// const getRandomList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/random`)\n// .set('Authorization', user.token);\n\n\n\nexport default class RandomList extends Component {\n    state = {\n        id: [],\n        cocktail:[],\n        favorites:[]\n    }\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        const getRandomList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/random`)\n            .set('Authorization', user.token);\n\n        const getFavorites = () => request.get('https://mighty-plateau-34350.herokuapp.com/favorites')\n            .set('Authorization', user.token); \n\n        const fave = await getFavorites()\n        const data = await getRandomList()\n        console.log(data.body)\n        this.setState({\n            cocktail: data.body,\n            favorites: fave.body\n    })\n}\nmakeFavorite = async (drink) => {\n    console.log('this works', drink)\n    // when the user clicks the makeFavorite button, add this drink to the favorite list\n    const user = JSON.parse(localStorage.getItem('user'))\n    const fave = await request.post('https://mighty-plateau-34350.herokuapp.com/favorites', {\n        name: drink.name,\n        image: drink.image,\n        api_id: drink.id \n    })\n    .set('Authorization', user.token)\n    console.log('fave', fave.body)\n}\nrenderButton = (drink) => {\n    // check the favorites list if we're on the search page\n    const isOnFavoritesList = this.state.favorites.find(cocktails => drink.name === cocktails.name);\n    if (!isOnFavoritesList) {\n    \n    return <button className='fav-btn' onClick={ () => this.makeFavorite(drink)}>Add to Favorites🍹</button>\n    }\n    // otherwise, indicate that they ae already on the favorites list\n    // this.makeFavorite(drink.id)\n    return <span>🍸</span>\n}\nrender() {\n    return (\n        <div>\n                \n                <ul className='random-list'>\n            {\n                this.state.cocktail.map(cocktail => (\n                    <>\n                    <div key={cocktail.id} to={`/id/${cocktail.id}`} onClick={()=> this.props.history.push(`/id/${cocktail.id}`)}> \n\n                    <CocktailItem cocktail={cocktail}/>\n                    </div>\n                    {this.renderButton(cocktail)}\n                    </>\n                )\n                )   \n                }\n                </ul>\n            </div>\n        )\n    }\n}\n\n{/* <CocktailItem cocktail={cocktail} onClick={this.props.history.push(`/id/${cocktail.id}`)}/> */}\n","import React, { Component } from 'react';\nimport request from 'superagent';\nrequire('dotenv').config();\n\n\nexport default class SaludLogin extends Component {\n//set state to empty user\n    state = {\n        usernameSignIn: '',\n        usernameSignUp: '',\n        passwordSignIn: '',\n        passwordSignUp: '',\n    }\n\n    handleSignIn = async () => {\n      try {\n        const signIn = await request.post(`https://mighty-plateau-34350.herokuapp.com/auth/signin`, {\n            email: this.state.usernameSignIn,\n            password: this.state.passwordSignIn,\n        }).set('Content-Type', 'application/x-www-form-urlencoded')\n\n        localStorage.setItem('user', JSON.stringify(signIn.body))\n        this.props.history.push('/');\n\n      } catch (e) {\n        console.log(e);\n      } \n    }\n\n    handleSignUp = async () => {\n        console.log(this.state.usernameSignUp);\n        const signUp = await request.post(`https://mighty-plateau-34350.herokuapp.com/auth/signup`, {\n            email: this.state.usernameSignUp,\n            password: this.state.passwordSignUp,\n        }).set('Content-Type', 'application/x-www-form-urlencoded')\n\n        localStorage.setItem('user', JSON.stringify(signUp.body))\n        this.props.history.push('/');\n        ;\n    }\n\n    render() {\n        console.log(this.state);\n        return (\n            <div className='login-box'>\n\n            <div className='textbox'>\n                \n                <input className='sign-up' placeholder='email' value={ this.state.usernameSignUp} onChange={(e) => this.setState({ usernameSignUp: e.target.value})} />\n                <input className='sign-up-pass' placeholder='password' value={ this.state.passwordSignUp} onChange={(e) => this.setState({ passwordSignUp: e.target.value})} />\n\n                <button className='btn' onClick={ this.handleSignUp }>Sign up</button>  \n                <br/>\n                <input className='sign-in' placeholder='email' value={ this.state.usernameSignIn} onChange={(e) => this.setState({ usernameSignIn: e.target.value})} />\n                <input className='sign-in-pass' placeholder='password' value={ this.state.passwordSignIn} onChange={(e) => this.setState({ passwordSignIn: e.target.value})} />\n\n                <button className='btn' onClick={this.handleSignIn}>Sign in</button>     \n   \n                </div>\n                </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport request from 'superagent';\nimport { withRouter } from 'react-router-dom';\nimport Header from './Header.js';\n\n\nexport default withRouter(class favoritesList extends Component {\n    state = {\n        favorites:[]\n    }\n\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        const getFavoritesList = () => request.get('https://mighty-plateau-34350.herokuapp.com/favorites')\n            .set('Authorization', user.token);\n            \n    const fave = await getFavoritesList()\n    console.log(fave.body)\n    this.setState({\n        favorites: fave.body\n    })\n}\n\n    render() {\n        return(\n            <div>\n                <Header/>\n                {\n                    this.state.favorites.map\n                    (drink =>  (    \n                    \n                    <div className='fav-list' key={drink.id} to={`/id/${drink.api_id}`} onClick={()=> this.props.history.push(`/id/${drink.api_id}`)}> \n\n                        \n                        <h2>{drink.name}</h2>\n                        <img src={drink.image} alt=\"\"/>\n                        {\n                            this.props.location.pathname !== '/favorites'\n                            && this.renderButton(drink) \n\n}\n                        \n                        </div>\n                        \n                        )\n                        )\n\n                \n                }\n            </div>\n        )\n    }\n})","import React, { Component } from \"react\";\n\nexport default class SearchBar extends Component {\n  render() {\n    return (\n      <form className='searchbar' onSubmit={this.props.handleSearch}>\n        <input\n          value={this.props.searchQuery}\n          onChange={this.props.handleChange}\n        />\n        <button className='search-btn'>Find a drink</button>\n      </form>\n    );\n  }\n}","import React, { Component } from 'react';\nimport RandomList from './components/Random.js'\n import request from 'superagent';\n import SearchBar from './components/SearchBar.js';\nimport Header from './components/Header.js';\n\n\nexport default class Home extends Component {\n    state= {\n        searchQuery: this.props.match.params.name,\n        cocktails:[],\n        favorites:[]\n    }\n\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        // const getSearchList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/name/${this.props.match.params.name}`)\n        //     .set('Authorization', user.token);\n\n        const getFavorites = () => request.get('https://mighty-plateau-34350.herokuapp.com/favorites')\n            .set('Authorization', user.token); \n      \n    \n    const fave = await getFavorites()\n    // const data = await getSearchList()\n    // console.log(data.body)\n    this.setState({\n        // cocktails: data.body,\n        favorites: fave.body\n    })\n}\n\nhandleSearch = async e => {\n    e.preventDefault();\n    const data = await request.get(\n      `https://mighty-plateau-34350.herokuapp.com/name/${this.state.searchQuery}`\n    );\n    this.setState({\n      cocktails: data.body \n    });\n    this.props.history.push(`/name/${this.state.searchQuery}`);\n  };\n  handleChange = e => this.setState({ searchQuery: e.target.value });\n\n   \n    render() {\n        return(\n           <div> \n             <Header/>\n              <SearchBar\n            searchQuery={this.state.searchQuery}\n            handleSearch={this.handleSearch}\n            handleChange={this.handleChange}\n          />\n             <div className='random'>\n                <RandomList {...this.props}/>\n            </div>\n            </div>\n            \n        )\n    }\n    \n\n}","import React, { Component } from 'react'\nimport '../drinkID.css';\nexport default class DrinkId extends Component {\n    render() {\n        const { cocktail } = this.props;\n        const makeDrinkStrings = (ingredientArray, measurementArray) => {\n            return ingredientArray.map((ingredient, i) => {\n              if (ingredient !== null ) {\n                return ingredient + ' ' + measurementArray[i]\n              }\n            })\n          }\n        const stringArray = makeDrinkStrings(cocktail.Ingredients, cocktail.Measurement) \n        const elementArray = stringArray.map(string => (\n          <li>{string}</li>\n        ))\n          return (\n            <div className='drink-name'>\n                  <h2>{cocktail.Name}</h2>\n                  <img className='detail-image' src ={cocktail.Image} alt=\"\"/>\n                         <p className='ing-ptag'>Ingredients: </p>\n                 <ul className='ing'>\n                     {elementArray}\n\n                    </ul>\n                    <p className='instructions-ptag'>How to make your tasty drink:</p>\n                    <p className='instructions'>\n                      {cocktail.Instructions}\n                     </p>\n          </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport request from 'superagent';\nimport DrinkId from './DrinkId.js';\n\n\n\n\nexport default class IdList extends Component {\n    state = {\n        id: [],\n        cocktail:[]\n    }\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        console.log('componentDidMount')\n        const getIdList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/id/${this.props.match.params.myDrink}`)\n            .set('Authorization', user.token);\n            \n        const data = await getIdList()\n    console.log('||', data.body)\n    this.setState({\n        cocktail: data.body\n    })\n}\n\n    render() {\n        console.log('|| cocktail', this.state.cocktail)\n        return (\n            <div>\n                <h2>Cocktails </h2>\n                <ul className='drink-list'>\n            {\n                this.state.cocktail.length && this.state.cocktail.map(cocktail => \n                    <DrinkId cocktail={cocktail} />\n                    )\n            }\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport request from 'superagent';\nimport CocktailItem from './CocktailItem';\n\n\n\n\nexport default class SearchList extends Component {\n    state = {\n        id: [],\n        cocktail:[],\n        favorites:[]\n    }\n    async componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'))\n        const getSearchList = () => request.get(`https://mighty-plateau-34350.herokuapp.com/name/${this.props.match.params.myCocktail}`)\n            .set('Authorization', user.token);\n        \n        const getFavorites = () => request.get('https://mighty-plateau-34350.herokuapp.com/favorites')\n            .set('Authorization', user.token); \n\n        const fave = await getFavorites()    \n        const data = await getSearchList()\n    console.log(data.body)\n    this.setState({\n        cocktail: data.body,\n        favorites: fave.body\n\n    })\n}\n\nmakeFavorite = async (drink) => {\n    console.log('this works', drink)\n    // when the user clicks the makeFavorite button, add this drink to the favorite list\n    const user = JSON.parse(localStorage.getItem('user'))\n    const fave = await request.post('https://mighty-plateau-34350.herokuapp.com/favorites', {\n        name: drink.name,\n        image: drink.image,\n        api_id: drink.id \n       \n    })\n    .set('Authorization', user.token)\n    console.log('fave', fave.body)\n}\nrenderButton = (drink) => {\n    // check the favorites list if we're on the search page\n    const isOnFavoritesList = this.state.favorites.find(cocktails => drink.name === cocktails.name);\n    if (!isOnFavoritesList) {\n    \n    return <button className='fav-btn' onClick={ () => this.makeFavorite(drink)}>Add to Favorites🍹</button>\n    }\n    // otherwise, indicate that they ae already on the favorites list\n    // this.makeFavorite(drink.id)\n    return <span>🍸</span>\n}\n\n    render() {\n        return (\n            <div>\n                <h2 className='search-h2'> Cocktails</h2>\n                <ul className='search-list'>\n                {\n                        this.state.cocktail.map(cocktail => (\n                            <>\n                            <div key={cocktail.id} to={`/id/${cocktail.id}`} onClick={()=> this.props.history.push(`/id/${cocktail.id}`)}> \n                    \n                            <CocktailItem cocktail={cocktail}/>\n                            </div>\n                            {this.renderButton(cocktail)}\n                    </>\n                        )\n                        )   \n                        }\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport bCImage from '../assets/background.png';\nimport rexImg from '../assets/rex.jpeg';\nimport suriImg from '../assets/suri.png';\nimport dorjeImg from '../assets/dorje.JPG';\nimport anastasiaImg from '../assets/anastasia.png';\nimport '../AboutUs.css';\nimport Header from './Header.js'\nexport default class AboutUs extends Component {\n    render () {\n        return (\n<section>\n<Header/>\n            <div className='container'>\n                <h1 className='heading'> Our Team</h1>\n            <div className='card-wrapper'>\n                <div className='card'>\n                    <img className='background' src={bCImage} alt=''/>\n                    <img className='profile-img' src={rexImg} alt=''/>\n                    <h1> Rex Bergeron</h1>\n                    <p className='job-title'>Software Developer</p>\n                    <p className='about'> Favorite Cocktail: 69 special </p>\n                    <p className='contact'>Contact</p>\n                </div>\n                <div className='card'>\n                    <img className='background' src={bCImage} alt=''/>\n                    <img className='profile-img' src={suriImg} alt=''/>\n                    <h1> Surelis Segarra</h1>\n                    <p className='job-title'>Software Developer</p>\n                    <p className='about'> Favorite Cocktail: Gin and Tonic </p>\n                    <p className='contact'>Contact</p>\n                </div>  <div className='card'>\n                    <img className='background' src={bCImage} alt=''/>\n                    <img className='profile-img' src={dorjeImg} alt=''/>\n                    <h1> Dorje Kirsten </h1>\n                    <p className='job-title'>Software Developer</p>\n                    <p className='about'> Favorite Cocktail: The Vesper Royale </p>\n                    <p className='contact'>Contact</p>\n                </div>\n                <div className='card'>\n                    <img className='background' src={bCImage} alt=''/>\n                    <img className='profile-img' src={anastasiaImg} alt=''/>\n                    <h1> Anastasia Morozova</h1>\n                    <p className='job-title'>Software Developer</p>\n                    <p className='about'> Favorite Cocktail: Mezcal Margarita </p>\n                    <p className='contact'>Contact</p>\n                </div>\n            </div>\n            </div>\n</section>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n import VodkaList from './components/VodkaList.js';\n import GinList from './components/GinList.js';\n import RumList from './components/RumList.js';\n import TequilaList from './components/TequilaList.js';\n import ScotchList from './components/ScotchList.js';\n import WhiskeyList from './components/WhiskeyList.js';\n import PopularList from './components/Popular.js';\n import RandomList from './components/Random.js';\n import SaludLogin from './saludLogin.js';\n import favoritesList from './components/favoriteslist.js';\nimport Home from './Home.js';\n// import Header from './components/Header.js';\nimport idList from './components/idList.js'\nimport PrivateRoute from './PrivateRoute.js';\nimport myImage from './assets/logo.png';\nimport SearchList from './components/SearchList.js';\nimport AboutUs from './components/About-Us.js';\n\n\n\nconst isLoggedIn = () => JSON.parse(localStorage.getItem('user'));\n\n\nexport default class App extends Component {\n  state = { user: null };\n      \n  setUser = user => {\n      this.setState({ user: user.body });\n  }\n  render() {\n    return (\n      <div>\n<img className='home-img' src={myImage} alt=''/>\n        <Router>\n        {/* <Header/> */}\n          <Switch>\n            \n            <Route exact path='/id/:myDrink' component={idList}/>\n            <Route exact path='/random' component={RandomList}/>\n            <Route exact path='/popular' component={PopularList}/>\n            <Route exact path='/vodka' component={VodkaList}/>\n            <Route exact path='/gin' component={GinList}/>\n            <Route exact path='/tequila' component={TequilaList}/>\n            <Route exact path='/rum' component={RumList}/>\n            <Route exact path='/scotch' component={ScotchList}/>\n            <Route exact path='/whiskey' component={WhiskeyList}/>\n            <Route exact path='/name/:myCocktail' component={SearchList}/>\n            <Route exact path='/about-us' component={AboutUs}/>\n            <Route exact path='/' render={(historyprops) =>\n            isLoggedIn()\n            ? <Home {...historyprops}/>\n            : <Redirect to='login' />\n          }/>\n\n\n          <Route exact path='/login' render={(props) => <SaludLogin {...props} setUser={ this.setUser } user={this.state.user }/>}/>\n          <Route exact path='/favorites' component={favoritesList}/>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}